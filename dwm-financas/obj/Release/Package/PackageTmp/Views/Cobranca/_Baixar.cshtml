@model DWM.Models.Repositories.EditarContaReceberViewModel
@{
    Layout = null;
}
@using (Ajax.BeginForm("_Baixar", "Cobranca", new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "EditarContaReceber" }, new { @class = "form", @name="form0", @id = "form0", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(info => info.operacaoId)
    @Html.HiddenFor(info => info.parcelaId)
    @Html.HiddenFor(info => info.historicoId)
    @Html.HiddenFor(info => info.complementoHist)
    @Html.Hidden("vr_juros_mora_baixa1",Model.vr_juros_mora_baixa)
    @Html.Hidden("vr_multa_atraso_baixa1", Model.vr_multa_atraso_baixa)
    <div class="row clearfix">
        <div class="col-md-6">
            @Html.Editor("nome_banco1", "BancosAutoComplete", new
           {
               value = Model.bancoId != null ? Model.bancoId.ToString() : "",
               Text = Model.nome_banco ?? "",
               nextField = "dt_pagamento",
               prevField = ""
           })
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label" for="dt_baixa">Dt.Pagamento</label>
                @*@Html.EditorFor(info => info.dt_pagamento, "DATE", new { identificador = "dt_pagamento", readOnly = "false", value = Model.dt_pagamento })*@
                <input type="date" class="form-control" name="dt_pagamento" id="dt_pagamento" value="@Model.dt_pagamento.Value.ToString("yyyy-MM-dd")" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label" for="dt_ultima_amortizacao">Dt.Movimento</label>
                @*@Html.EditorFor(info => info.dt_movto, "DATE", new { identificador = "dt_movto", readOnly = "false", value = Model.dt_movto })*@
                <input type="date" class="form-control" name="dt_movto" id="dt_movto" value="@Model.dt_movto.Value.ToString("yyyy-MM-dd")" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label" for="drpFormaPagamento">Forma de pagamento</label>
                @Html.DropDownListFor(m => m.ind_forma_pagamento, new DWM.Models.Enumeracoes.BindDropDownList().FormaPagamento(Model.ind_forma_pagamento ?? ""), new { @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="row clearfix">
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label">Saldo Devedor</label>
                <input class="form-control text-right" readonly id="vr_saldo_devedor" name="vr_saldo_devedor" type="text" value="@Model.vr_saldo_devedor.Value.ToString("###,###,###,##0.00")" onblur="return Converte(this, 'vr_saldo_devedor')">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @{
                    var _vr_juros = Model.vr_juros_mora_baixa ?? 0; //   Model.vr_encargos.Value - Model.vr_multa_atraso ?? 0;
                    var _readonly = Model.hasMultaMora ? "readonly" : "";
                }
                <label class="control-label">Juros de mora</label>
                <input class="form-control text-right" @_readonly id="vr_juros_mora" name="vr_juros_mora" type="text" value="@_vr_juros.ToString("###,###,##0.00")" onblur="return calcularValor(this)">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @{
                    var vr_multa_atraso = Model.vr_multa_atraso_baixa ?? 0;
                }
                <label class="control-label">Multa por atraso</label>
                <input class="form-control text-right" @_readonly id="vr_multa_atraso" name="vr_multa_atraso" type="text" value="@vr_multa_atraso.ToString("###,###,##0.00")" onblur="return calcularValor(this)">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label">Desconto</label>
                <input class="form-control text-right" id="vr_desconto" name="vr_desconto" type="text" value="@Model.vr_desconto_baixa.Value.ToString("###,###,##0.00")" onblur="return calcularValor(this)">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label">Valor p/ liquidação</label>
                <input class="form-control text-right" readonly id="vr_liquidacao" name="vr_liquidacao" type="text" value="@Model.vr_saldo_devedor.Value.ToString("###,###,##0.00")">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label">Valor pago</label>
                <input class="form-control text-right" id="vr_baixa" name="vr_baixa" type="text" value="@Model.vr_baixa.Value.ToString("###,###,##0.00")" onblur="return Converte(this, 'vr_baixa')">
            </div>
        </div>
    </div>
    <div class="row clearfix">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Arquivo de comprovante</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <input id="fileupload" type="file" name="files[]" multiple>
                        @Html.Hidden("arquivo")
                    </div>
                    <div class="file_name" id="file_name1"></div>
                    <div class="progress" id="progress1">
                        <div id="progress1-bar" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                            <span class="sr-only">0% complete</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h2 class="panel-title">
                        Dados do Cheque
                    </h2>
                </div>
                <div class="panel-body">
                    <div class="row clearfix">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">Nº Banco</label>
                                @Html.TextBoxFor(info => info.cheque_banco, "{0:##0}", new { @class = "form-control input-sm", @onkeypress = "return numeros()", @maxlength = "3" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">Agência</label>
                                @Html.TextBoxFor(info => info.cheque_agencia, new { @class = "form-control input-sm", @maxlength = "5" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">Nº Cheque</label>
                                @Html.TextBoxFor(info => info.cheque_numero, new { @class = "form-control input-sm", @maxlength = "6" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row clearfix">
        <div class="col-md-6">
            @Html.Editor("descricao_enquadramento1", "EnquadramentoAutoComplete", new
        {
            value = Model.enquadramentoId != null ? Model.enquadramentoId.ToString() : "",
            Text = Model.descricao_enquadramento ?? "",
            nextField = "",
            prevField = "cheque_numero"
        })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 col-lg-12 col-xs-12">
            <input type="submit" class="btn btn-success" value="Salvar" onclick="return valida();" />
            <input type="button" onclick="window.location = '../Cobranca/Browse'" class="btn btn-default" value="Cancelar" />
            <a href="#panel-top" class="info pull-right" id="topo-baixa"><i class="fa fa-toggle-up"></i> Topo</a>
        </div>
    </div>
}

<script type="text/javascript">
    $(function () {
        $('#form0').submit(function () {
            if ($(this).valid()) {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        $('#EditarContaReceber').html(result);
                    }
                });
            }
            return false;
        });
    });

    function calcularValor(obj) {
        if (!fnValidaValor(obj))
            return false;

        if ($("#vr_juros_mora").val() == '')
            $("#vr_juros_mora").val('0,00');

        // juros calculado pelo sistema
        if ($("#vr_juros_mora_baixa1").val() == '')
            $("#vr_juros_mora_baixa1").val('0,00');

        // multa por atraso calculado pelo sistema
        if ($("#vr_multa_atraso_baixa1").val() == '')
            $("#vr_multa_atraso_baixa1").val('0,00');

        if ($("#vr_multa_atraso").val() == '')
            $("#vr_multa_atraso").val('0,00');

        if ($("#vr_desconto").val() == '')
            $("#vr_desconto").val('0,00');

        if ($("#vr_baixa").val() == '')
            $("#vr_baixa").val('0,00');

        var _vr_saldo_devedor = $("#vr_saldo_devedor").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_saldo_devedor = parseInt(_vr_saldo_devedor);

        var _vr_juros_mora = $("#vr_juros_mora").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_juros_mora = parseInt(_vr_juros_mora);

        // juros de mora calculado pelo sistema
        var _vr_juros_mora_baixa1 = $("#vr_juros_mora_baixa1").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_juros_mora_baixa1 = parseInt(_vr_juros_mora_baixa1);

        // multa por atraso calculado pelo sistema
        var _vr_multa_atraso_baixa1 = $("#vr_multa_atraso_baixa1").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_multa_atraso_baixa1 = parseInt(_vr_multa_atraso_baixa1);

        var _vr_multa_atraso = $("#vr_multa_atraso").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_multa_atraso = parseInt(_vr_multa_atraso);

        var _vr_desconto = $("#vr_desconto").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_desconto = parseInt(_vr_desconto);

        var _vr_baixa = $("#vr_baixa").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_baixa = parseInt(_vr_baixa);

        if (_vr_desconto > _vr_saldo_devedor) {
            _vr_desconto = 0;
            $("#vr_desconto").val("0,00");
        }

        //var _vr_liquidacao = (_vr_saldo_devedor - _vr_multa_atraso_baixa1 - _vr_juros_mora_baixa1) + _vr_juros_mora + _vr_multa_atraso - _vr_desconto;
        var _vr_liquidacao = _vr_saldo_devedor + _vr_juros_mora + _vr_multa_atraso - _vr_desconto;
        _vr_baixa = _vr_liquidacao;

        $("#vr_liquidacao").val(_vr_baixa);
        $("#vr_baixa").val(_vr_baixa);

        FormataNumero($("#vr_liquidacao")[0]);
        FormataNumero($("#vr_baixa")[0]);

        return true;
    }

    function valida() {

        //if ($("#bancoId").val() == '' || $("#bancoId").val() == '0') {
        //    ShowMessageAjaxAlert('Banco deve ser informado', 'warning');
        //    $('#nome_banco').focus();
        //    return false;
        //}

        if ($("#dt_pagamento").val() == '') {
            ShowMessageAjaxAlert('Data do pagamento deve ser informada', 'warning');
            $('#dt_pagamento').focus();
            return false;
        }
        if ($("#dt_movto").val() == '') {
            ShowMessageAjaxAlert('Data do movimento bancário deve ser informada', 'warning');
            $('#dt_movto').focus();
            return false;
        }

        // data do pagamento
        var _dt_pagamento = $("#dt_pagamento").val().split("/");
        var p = new Date(_dt_pagamento[2], _dt_pagamento[1] - 1, _dt_pagamento[0]);

        // data do movimento
        var _dt_movto = $("#dt_movto").val().split("/");
        var m = new Date(_dt_movto[2], _dt_movto[1] - 1, _dt_movto[0]);


        if (m < p) {
            ShowMessageAjaxAlert('Data do movimento deve ser maior ou igual que a data do pagamento', 'warning');
            $('#dt_vencimento').focus();
            return false;
        }
        var _vr_liquidacao = $("#vr_liquidacao").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_liquidacao = parseFloat(_vr_liquidacao);

        var _vr_baixa = $("#vr_baixa").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_baixa = parseFloat(_vr_baixa);

        if (_vr_liquidacao < _vr_baixa) {
            ShowMessageAjaxAlert('Valor pago deve ser menor ou igual que o valor para liquidação', 'warning');
            $('#vr_baixa').focus();
            return false;
        }

        if (_vr_baixa <= 0) {
            ShowMessageAjaxAlert('Valor pago deve ser maior que zero', 'warning');
            $('#vr_baixa').focus();
            return false;
        }

        var _vr_saldo_devedor = $("#vr_saldo_devedor").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_saldo_devedor = parseFloat(_vr_saldo_devedor / 100);

        var _vr_desconto = $("#vr_desconto").val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', '');
        _vr_desconto = parseFloat(_vr_desconto / 100);

        if (_vr_desconto > _vr_saldo_devedor) {
            ShowMessageAjaxAlert('Desconto não pode ser maior que o valor para liquidação', 'warning');
            $('#vr_desconto').focus();
            return false;
        }

        document.getElementById('topo-baixa').click();

        return true;
    }
</script>
