@using DWM.Models.Repositories
@using App_Dominio.Repositories
@using App_Dominio.Enumeracoes
@model TituloIncluirViewModel
@{
    TransacaoRepository[] t = { new TransacaoRepository(), new TransacaoRepository() };
    t[0].url = "../CNAB/Create";
    t[0].nomeCurto = "Incluir";
    t[0].referencia = "";

    t[1].url = "../Home/Default";
}
<div class="container-cadastro">
    @Html.Partial("_alerts")
    <div class="x_panel" id="panel-top">
        @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Títulos de cobrança (Boleto)", Descricao = "Incluir títulos na carteira de cobrança", Transacao = t })
        <div class="x_content">
            @using (Html.BeginForm("Create", "CNAB", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data", @id = "formulario" }))
            {
                @Html.Partial("_AjaxAlert", "panel-top")
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @Html.HiddenFor(info => info.empresaId)
                <div class="row clearfix">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label margem-interna" for="ConvenioID">Convênio</label>
                            @Html.DropDownList("ConvenioID", new DWM.Models.Enumeracoes.BindDropDownList().Convenios(Model.BancoID, Model.ConvenioID), new { @class = "form-control margem-negativa" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group col-md-12">
                            <label class="control-label margem-interna" for="documento">Documento</label>
                            @Html.TextBoxFor(info => info.documento, new { @class = "form-control margem-negativa", @maxlength = "12" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Editor("nome_cliente1", "ClientesAutoComplete", new
                           {
                               value = Model.clienteId > 0 ? Model.clienteId.ToString() : "",
                               Text = Model.nome_cliente ?? "",
                               nextField = "descricao_historico",
                               prevField = "documento"
                           })
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-6">
                        @Html.Editor("descricao_historico1", "HistoricoAutoComplete", new
                           {
                               value = Model.historicoId > 0 ? Model.historicoId.ToString() : "",
                               Text = Model.descricao_historico ?? "",
                               nextField = "complementoHist",
                               prevField = "nome_cliente"
                           })
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label" for="complementoHist">Histórico complementar</label>
                            @Html.TextAreaFor(m => m.complementoHist, 1, 1, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-6">
                        @Html.Editor("descricao_centroCusto1", "CentroCustoAutoComplete", new
                           {
                               value = Model.centroCustoId != null ? Model.centroCustoId.ToString() : "",
                               Text = Model.descricao_centroCusto ?? "",
                               nextField = "descricao_enquadramento",
                               prevField = "complementoHist"
                           })
                    </div>
                    <div class="col-md-6">
                        @Html.Editor("descricao_enquadramento1", "EnquadramentoAutoComplete", new
                           {
                               value = Model.enquadramentoId != null ? Model.enquadramentoId.ToString() : "",
                               Text = Model.descricao_enquadramento ?? "",
                               nextField = "Especie",
                               prevField = "descricao_centroCusto"
                           })
                    </div>
                </div>
                /* Nº Título (Seu Número), Aceite, Data de Vencimento, Espécie */
                <div class="row clearfix">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label" for="Especie">Espécie</label>
                            @Html.DropDownList("Especie", new DWM.Models.Enumeracoes.BindDropDownList().Especie(Model.Especie), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label" for="SeuNumero">Aceite</label>
                            @Html.DropDownList("Aceite", DropDownListEnum.SimNao(Model.Aceite), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label" for="SeuNumero">Nº Título</label>
                            @Html.TextBoxFor(info => info.SeuNumero, new { @class = "form-control", @maxlength = "10" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label" for="DataVencimento">Vencimento</label>
                            <input type="date" class="form-control" name="DataVencimento" id="DataVencimento" value="@Model.DataVencimento.ToString("yyyy-MM-dd")" min="@App_Dominio.Models.Funcoes.Brasilia().Date.ToString("yyyy-MM-dd")" />
                        </div>
                    </div>
                </div>
                /*  Valores / Instruções*/
                <div class="row clearfix margem-topo-20">
                    <div class="col-md-6">
                        @*--- Valores ----*@
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-6 margem-topo-sm">Valor principal</label>
                                        <div class="col-md-6">
                                            <input type="text" name="ValorPrincipal" id="ValorPrincipal" class="form-control text-right" value="@Model.ValorPrincipal.ToString("###,###,##0.00")" onfocus="this.select();" onblur="return Converte(this, 'ValorPrincipal')" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-6 margem-topo-sm">Valor Juros (R$)</label>
                                        <div class="col-md-6">
                                            <input type="text" name="ValorJuros" id="ValorJuros" class="form-control text-right" value="@Model.ValorJuros.Value.ToString("###,###,##0.00")" onblur="return Converte(this, 'ValorJuros')" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-6 margem-topo-sm">Multa por atraso (R$)</label>
                                        <div class="col-md-6">
                                            <input type="text" name="ValorMulta" id="ValorMulta" class="form-control text-right" value="@Model.ValorMulta.Value.ToString("###,###,##0.00")" onblur="return Converte(this, 'ValorMulta')" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-6 margem-topo-sm">Desconto (R$)</label>
                                        <div class="col-md-6">
                                            <input type="text" name="ValorDesconto1" id="ValorDesconto1" class="form-control text-right" value="@Model.ValorDesconto1.Value.ToString("###,###,##0.00")" onblur="return Converte(this, 'ValorDesconto1')" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-6 margem-topo-sm">Valor Abatimento (R$)</label>
                                        <div class="col-md-6">
                                            <input type="text" name="ValorAbatimento" id="ValorAbatimento" class="form-control text-right" value="@Model.ValorAbatimento.Value.ToString("###,###,##0.00")" onblur="return Converte(this, 'ValorAbatimento')" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @*--- Instruções ----*@
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-3 margem-topo-sm" for="InstrucaoPagamento1">Instrução 1</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(m => m.InstrucaoPagamento1, new { @class = "form-control", @MaxLength = "40" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-3 margem-topo-sm" for="InstrucaoPagamento2">Instrução 2</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(m => m.InstrucaoPagamento2, new { @class = "form-control", @MaxLength = "40" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-3 margem-topo-sm" for="InstrucaoPagamento3">Instrução 3</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(m => m.InstrucaoPagamento3, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-3 margem-topo-sm" for="InstrucaoPagamento4">Instrução 4</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(m => m.InstrucaoPagamento4, new { @class = "form-control", @MaxLength = "40" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 no-padding">
                                    <div class="form-group">
                                        <label class="col-md-3 margem-topo-sm" for="InstrucaoRodape">Instrução Rodapé</label>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(m => m.InstrucaoRodape, new { @class = "form-control", @MaxLength = "40" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                /* Salvar */
                <p>&nbsp;</p>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div class="form-group">
                            <input type="submit" class="btn btn-success" value="Salvar" name="btn-salvar" id="btn-salvar" onclick="return Valida();" />
                            <input type="button" onclick="window.location = '../Home/Default'" class="btn btn-default" value="Cancelar" />
                            <a href="#panel-top" class="info pull-right" id="topo"><i class="fa fa-toggle-up"></i> Topo</a>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>

    function Valida() {
        if ($("#clienteId").val() == '' || $('#clienteId').val() == "0")
        {
            ShowMessageAjaxAlert('Campo de preenchimento obrigatório: Pagador', 'warning');
            $('#nome_cliente').focus();
            return false;
        }
        if ($("#historicoId").val() == '' || $('#historicoId').val() == "0") {
            ShowMessageAjaxAlert('Campo de preenchimento obrigatório: Histórico', 'warning');
            $('#descricao_historico').focus();
            return false;
        }
        if ($("#Especie").val() == '' || $('#Especie').val() == "0") {
            ShowMessageAjaxAlert('Campo de preenchimento obrigatório: Espécie', 'warning');
            $('#Especie').focus();
            return false;
        }
        if ($("#dt_vencimento").val() == '') {
            ShowMessageAjaxAlert('Campo de preenchimento obrigatório: Data de Vencimento', 'warning');
            $('#dt_vencimento').focus();
            return false;
        }

        var _valorPrincipal = parseFloat($('#ValorPrincipal').val().replace('.', '').replace('.', '').replace('.', '').replace(',', '').replace('-', ''));

        if (_valorPrincipal <= 0) {
            ShowMessageAjaxAlert('Campo de preenchimento obrigatório: Valor Principal', 'warning');
            $('#ValorPrincipal').focus();
            return false;
        }

        return true;
    }

</script>

