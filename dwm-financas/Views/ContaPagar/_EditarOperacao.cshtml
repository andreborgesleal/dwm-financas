@using DWM.Models.Repositories
@using App_Dominio.Repositories
@model ContaPagarViewModel
@{
    Layout = null;

    TransacaoRepository[] t = { new TransacaoRepository(), new TransacaoRepository() };

    t[0].url = "../ContaPagar/Alterar?operacaoId=" + Model.operacaoId.ToString();
    t[0].nomeCurto = "Alterar";
    t[0].referencia = "";
    t[0].exibir = "S";
    t[0].glyph = "fa fa-check-edit";

    t[1].url = "../Home/Default";
}
<div id="div-lov"></div>
<div class="container-cadastro">
    @Html.Partial("_alerts")
    <div class="row" id="panel-top">
        <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
            <div class="x_panel">
                @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Editar conta a pagar", Descricao = "", Transacao = t })
                <div class="x_content">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <h4><strong>Operação</strong></h4>
                            @(Model.operacaoId)
                        </li>
                        <li class="list-group-item">
                            <h4><strong>Emissão</strong></h4>
                            @Model.dt_emissao.ToString("dd/MM/yyyy")
                        </li>
                        @if (@Model.documento != null && @Model.documento != "")
                        {
                            <li class="list-group-item">
                                <h4><strong>Documento</strong></h4>
                                @Model.documento
                            </li>
                        }
                        <li class="list-group-item">
                            <h4><strong>Histórico</strong></h4>
                            @(Model.descricao_historico + " " + Model.complementoHist)
                        </li>
                        @if (Model.centroCustoId.HasValue)
                        {
                            <li class="list-group-item">
                                <h4><strong>Centro de Custo</strong></h4>
                                @Model.descricao_centroCusto
                            </li>
                        }
                        @if (Model.vr_multa.HasValue)
                        {
                            <li class="list-group-item">
                                <h4><strong>Multa por atraso</strong></h4>
                                @Model.vr_multa.Value.ToString("##0.00")% <br />
                                <span class="text-prateado">@(((Model.vr_multa / 100) * Model.OperacaoParcelas.FirstOrDefault().vr_principal).Value.ToString("R$ ###,###,##0.00"))</span>
                            </li>
                        }
                        @if (Model.vr_jurosMora.HasValue)
                        {
                            <li class="list-group-item">
                                <h4><strong>Juros de Mora</strong></h4>
                                @Model.vr_jurosMora.Value.ToString("##0.00")% <br />
                                <span class="text-prateado">@(((Model.vr_jurosMora / 100) * Model.OperacaoParcelas.FirstOrDefault().vr_principal).Value.ToString("R$ ###,###,##0.00")) por dia</span>

                            </li>
                        }
                        <li class="list-group-item">
                            <h4><strong>Total</strong></h4>
                            @Model.OperacaoParcelas.Sum(info => info.vr_principal).ToString("R$ ###,###,##0.00") -
                            <span class="text-prateado"> @Model.OperacaoParcelas.Count() parcela(s)</span>
                        </li>
                        @if (Model.OperacaoParcelas != null && Model.OperacaoParcelas.Count() > 0)
                        {
                            if ("5|6".Contains(Model.OperacaoParcelas.FirstOrDefault().ind_baixa ?? " "))
                            {
                                <li class="list-group-item">
                                    <h4><strong>Situação</strong></h4>
                                    @Model.OperacaoParcelas.FirstOrDefault().situacao
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
            <h1 class="green"><strong>@(Model.credorId.ToString() + "-" + Model.nome_credor)</strong> &nbsp;&nbsp;<small><span class="info">@(!String.IsNullOrEmpty(Model.descricao_grupoCredor) ? "(" + Model.descricao_grupoCredor + ")" : "")</span></small></h1>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
                    <div class="x_panel">
                        @{
                            TransacaoRepository[] tTitulo = { new TransacaoRepository(), new TransacaoRepository(), new TransacaoRepository(), new TransacaoRepository() };
                            tTitulo[0].uri = "myTab";
                            tTitulo[0].nomeCurto = "Liquidar";
                            tTitulo[0].referencia = "$(\"#home-tab\").click();";
                            tTitulo[0].exibir = "S";
                            tTitulo[0].glyph = "fa fa-check-square";

                            tTitulo[1].uri = "myTab";
                            tTitulo[1].nomeCurto = "Excluir";
                            tTitulo[1].referencia = "$(\"#profile-excluir\").click();";
                            tTitulo[1].exibir = "S";
                            tTitulo[1].glyph = "fa fa-minus-square";

                            tTitulo[2].uri = "myTab";
                            tTitulo[2].nomeCurto = "Cancelar";
                            tTitulo[2].referencia = "$(\"#profile-cancelar\").click();";
                            tTitulo[2].exibir = "S";
                            tTitulo[2].glyph = "fa fa-times";

                            tTitulo[3].url = "../Home/Default";
                        }
                        @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Contas a pagar", Descricao = "", Transacao = tTitulo })
                        <div class="x_content">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr class="headings">
                                            <td class="column-title text-center"><strong>#</strong></td>
                                            <td class="column-title text-center"><strong>Vencimento</strong></td>
                                            <td class="column-title text-center"><strong>Últ.Pagto</strong></td>
                                            <td class="column-title text-right"><strong>Principal</strong></td>
                                            <td class="column-title text-right"><strong>Amortização</strong></td>
                                            <td class="column-title text-right"><strong>Encargos</strong></td>
                                            <td class="column-title text-right"><strong>Desconto</strong></td>
                                            <td class="column-title text-right"><strong>Valor Pago</strong></td>
                                            <td class="column-title text-right"><strong>Saldo devedor</strong></td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{ foreach (ContaPagarParcelaViewModel par in Model.OperacaoParcelas)
                                            {
                                                <tr>
                                                    <td class="text-center"><a href="Edit?operacaoId=@Model.operacaoId&parcelaId=@par.parcelaId" class="dedo-indicador text-primary">@(par.parcelaId)</a></td>
                                                    <td class="text-center">@par.dt_vencimento.ToString("dd/MM/yyyy")</td>
                                                    <td class="text-center">@(par.dt_ultima_amortizacao.HasValue ? par.dt_ultima_amortizacao.Value.ToString("dd/MM/yyyy") : "")</td>
                                                    <td class="text-right">@par.vr_principal.ToString("###,###,###,##0.00")</td>
                                                    <td class="text-right">@(par.vr_amortizacao.HasValue && par.vr_amortizacao.Value > 0 ? par.vr_amortizacao.Value.ToString("###,###,###,##0.00") : "")</td>
                                                    <td class="text-right">@(par.vr_encargos.HasValue && par.vr_encargos.Value > 0 ? par.vr_encargos.Value.ToString("###,###,###,##0.00") : "")</td>
                                                    <td class="text-right">@(par.vr_desconto.HasValue && par.vr_desconto.Value > 0 ? par.vr_desconto.Value.ToString("###,###,###,##0.00") : "")</td>
                                                    <td class="text-right">@(par.vr_total_pago.HasValue && par.vr_total_pago.Value > 0 ? par.vr_total_pago.Value.ToString("###,###,###,##0.00") : "")</td>
                                                    <td class="text-right">@(par.vr_saldo_devedor.HasValue && par.vr_saldo_devedor.Value > 0 ? par.vr_saldo_devedor.Value.ToString("R$ ###,###,###,##0.00") : "R$ 0,00")</td>
                                                </tr>
                                            }
                                        }
                                        <tr class="warning">
                                            <td class="text-left" colspan="3"><strong>Total</strong></td>
                                            <td class="text-right"><strong>@Model.OperacaoParcelas.Sum(info => info.vr_principal).ToString("###,###,###,##0.00")</strong></td>
                                            <td class="text-right"><strong>@(Model.OperacaoParcelas.Sum(info => info.vr_amortizacao.GetValueOrDefault(0)).ToString("###,###,###,##0.00"))</strong></td>
                                            <td class="text-right"><strong>@(Model.OperacaoParcelas.Sum(info => info.vr_encargos.GetValueOrDefault(0)).ToString("###,###,###,##0.00"))</strong></td>
                                            <td class="text-right"><strong>@(Model.OperacaoParcelas.Sum(info => info.vr_desconto.GetValueOrDefault(0)).ToString("###,###,###,##0.00"))</strong></td>
                                            <td class="text-right"><strong>@(Model.OperacaoParcelas.Sum(info => info.vr_total_pago.GetValueOrDefault(0)).ToString("###,###,###,##0.00"))</strong></td>
                                            <td class="text-right"><strong>@(Model.OperacaoParcelas.Sum(info => info.vr_saldo_devedor.GetValueOrDefault(0)).ToString("R$ ###,###,###,##0.00"))</strong></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
                    <div class="x_panel">
                        @{
                            TransacaoRepository[] tContabilidade = { new TransacaoRepository(), new TransacaoRepository(), new TransacaoRepository() };

                            tContabilidade[0].url = "../Contabilidade/Edit?contabilidadeId=" + Model.Contabilidade.contabilidadeId.ToString();
                            tContabilidade[0].nomeCurto = "Editar";
                            tContabilidade[0].referencia = "";
                            tContabilidade[0].exibir = "S";
                            tContabilidade[0].glyph = "fa fa-check-edit";

                            tContabilidade[1].url = "../Contabilidade/Create";
                            tContabilidade[1].nomeCurto = "Incluir";
                            tContabilidade[1].referencia = "";
                            tContabilidade[1].exibir = "N";

                            tContabilidade[2].url = "../Home/Default";
                        }
                        @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Contabilidade", Descricao = "", Transacao = tContabilidade })
                        <div class="x_content">
                            @if (Model.Contabilidade != null && Model.Contabilidade.ContabilidadeItems.Count() > 0)
                            {
                                if (Model.Contabilidade.ContabilidadeItems.Count() > 0)
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr class="headings">
                                                    <td class="column-title"><strong>Conta</strong></td>
                                                    <td class="column-title"><strong>Descrição</strong></td>
                                                    <td class="column-title text-right"><strong>Débito</strong></td>
                                                    <td class="column-title text-right"><strong>Crédito</strong></td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (ContabilidadeItemViewModel item in Model.Contabilidade.ContabilidadeItems)
                                                {
                                                    <tr>
                                                        <td>@item.codigoReduzido</td>
                                                        <td>@item.descricao_planoConta</td>
                                                        <td class="text-right">@(item.tipoLancamento == "D" ? item.valor.ToString("###,###,###,##0.00") : "")</td>
                                                        <td class="text-right">@(item.tipoLancamento == "C" ? item.valor.ToString("###,###,###,##0.00") : "")</td>
                                                    </tr>
                                                }
                                                <tr class="warning">
                                                    <td colspan="2"><strong>Total</strong></td>
                                                    <td class="text-right"><strong>@Model.Contabilidade.ContabilidadeItems.Where(tipo => tipo.tipoLancamento == "D").Select(info => info.valor).Sum().ToString("###,###,###,##0.00")</strong></td>
                                                    <td class="text-right"><strong>@Model.Contabilidade.ContabilidadeItems.Where(tipo => tipo.tipoLancamento == "C").Select(info => info.valor).Sum().ToString("###,###,###,##0.00")</strong></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="well text-center">Não há lançamento contábil para esta operação</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.Partial("_AjaxAlert", "panel-tab")
    <div class="row" id="panel-tab">
        <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">
            <div role="tabpanel" data-example-id="togglable-tabs">
                <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                    <li role="presentation" class="active">
                        <a href="#baixar" role="tab" id="home-tab" data-toggle="tab" aria-expanded="true">Liquidar</a>
                    </li>
                    <li role="presentation" class="">
                        <a href="#excluir" role="tab" id="profile-excluir" data-toggle="tab" aria-expanded="false">Excluir</a>
                    </li>
                    <li role="presentation" class="">
                        <a href="#cancelar" role="tab" id="profile-cancelar" data-toggle="tab" aria-expanded="false">Cancelar</a>
                    </li>
                </ul>
                <div id="myTabContent" class="tab-content">
                    <!-- Baixar por motivo de liquidação -->
                    <div role="tabpanel" class="tab-pane fade active in" id="baixar" aria-labelledby="home-tab">
                        @if (Model.OperacaoParcela.vr_saldo_devedor > 0)
                        {
                            @Html.Partial("_Liquidar", Model)
                        }
                        else
                        {
                            <div class="well text-center margem-topo-10">Operação já foi baixada.</div>
                        }
                    </div>
                    <!-- Exclusão da operação -->
                    <div role="tabpanel" class="tab-pane fade" id="excluir" aria-labelledby="profile-excluir">
                        @Html.Partial("_Delete", Model)
                    </div>
                    <!-- Baixa por motivo de cancelamento -->
                    <div role="tabpanel" class="tab-pane fade" id="cancelar" aria-labelledby="profile-cancelar">
                        @if (Model.OperacaoParcela.vr_saldo_devedor > 0)
                        {
                            <div id="Cancelar">
                                @Html.Partial("_Cancel", Model)
                            </div>
                        }
                        else
                        {
                            <div class="well text-center margem-topo-10">Operação já foi baixada.</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

